      SUBROUTINE MATEV1(NMAT,XM,NXM,XP,NXP,UO,NUO,T,MAT,N,M)
      IMPLICIT NONE
      INTEGER NMAT,NXM,NXP,NUO,N,M
      INTEGER I,J
      DOUBLE PRECISION XM(NXM),XP(NXP),UO(NUO),T,MAT(N,M),VEC(N*M)
      EXTERNAL EVLMAT

      CALL EVLMAT(NMAT,XM,NXM,XP,NXP,UO,NUO,T,VEC,N,M)

      DO J=1,M
         DO I=1,N
            MAT(I,J) = VEC((J-1)*N+I)
         END DO
      END DO
      END

      SUBROUTINE MATEV2(NMAT,XM,NXM,XP,NXP,UO,NUO,T,MAT,F,N,M)
      IMPLICIT NONE
      INTEGER NMAT,NXM,NXP,NUO,N,M
      INTEGER I,J
      DOUBLE PRECISION XM(NXM),XP(NXP),UO(NUO),T,MAT(N,M),VEC(N*(M+1))
     *,F(N)
      EXTERNAL EVLMAT

      CALL EVLMAT(NMAT,XM,NXM,XP,NXP,UO,NUO,T,VEC,N,M+1)
c     Wrap the matrix
      DO J=1,M
         DO I=1,N
            MAT(I,J) = VEC((J-1)*N+I)
         END DO
      END DO
c     Get the function value
      DO I=1,N
         F(I) = VEC(N*M+I)
      END DO
      END

      SUBROUTINE AMAT(XM,XP,UO,T,A,NPARAM,N,M)
      INTEGER NPARAM,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,A(N,N)
      CALL MATEV1(1,XM,NPARAM,XP,N,UO,M,T,A,N,N)
      END

      SUBROUTINE BMAT(XM,XP,UO,T,B,NPARAM,N,M)
      INTEGER NPARAM,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,B(N,M)
      CALL MATEV1(2,XM,NPARAM,XP,N,UO,M,T,B,N,M)
      END

      SUBROUTINE CMAT(XM,XP,UO,T,C,NPARAM,N,M,S)
      INTEGER NPARAM,N,M,S
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,C(S,N)
      CALL MATEV1(3,XM,NPARAM,XP,N,UO,M,T,C,S,N)
      END

      SUBROUTINE DMAT(XM,XP,UO,T,D,NPARAM,N,M,S)
      INTEGER NPARAM,N,M,S
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,D(S,M)
      CALL MATEV1(4,XM,NPARAM,XP,N,UO,M,T,D,S,M)
      END

      SUBROUTINE FVECXJ(XM,XP,UO,T,JACOB,F,NPARAM,N,M)
      INTEGER NPARAM,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,JACOB(N,N),F(N)
c     CONSTRUCT D(F)/D(XP) IN JACOB(N,N)
      CALL MATEV2(5,XM,NPARAM,XP,N,UO,M,T,JACOB,F,N,N)
      END

      SUBROUTINE FVECUJ(XM,XP,UO,T,JACOB,NPARAM,N,M)
      INTEGER NPARAM,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,JACOB(N,M)
c     CONSTRUCT D(F)/D(UO) IN JACOB(N,M)
      CALL MATEV1(6,XM,NPARAM,XP,N,UO,M,T,JACOB,N,M)
      END

      SUBROUTINE HVECXJ(XM,XP,UO,T,JACOB,H,NPARAM,N,M,S)
      INTEGER NPARAM,N,M,S
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,JACOB(S,N),H(S)
c     CONSTRUCT D(H)/D(XP) IN JACOB(S,N)
      CALL MATEV2(7,XM,NPARAM,XP,N,UO,M,T,JACOB,H,S,N)
      END

      SUBROUTINE HVECUJ(XM,XP,UO,T,JACOB,NPARAM,N,M,S)
      INTEGER NPARAM,N,M,S
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,JACOB(S,M)
c     CONSTRUCT D(H)/D(UO) IN JACOB(S,M)
      CALL MATEV1(8,XM,NPARAM,XP,N,UO,M,T,JACOB,S,M)
      END

      SUBROUTINE SIGMAT(XM,UO,T,SIGMA,NPARAM,N,M)
      INTEGER NPARAM,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,SIGMA(N,N)
      CALL MATEV1(9,XM,NPARAM,XP,N,UO,M,T,SIGMA,N,N)
      END

      SUBROUTINE SMAT(XM,UO,T,SM,NPARAM,N,M,S)
      INTEGER NPARAM,S,N,M
      DOUBLE PRECISION XM(NPARAM),XP(N),UO(M),T,SM(S,S)
      CALL MATEV1(10,XM,NPARAM,XP,N,UO,M,T,SM,S,S)
      END
